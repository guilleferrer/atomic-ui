# Use the front controller as index file. It serves as fallback solution when
# every other rewrite/redirect fails (e.g. in an aliased environment without
# mod_rewrite). Additionally, this reduces the matching process for the
# startpage (path "/") because otherwise Apache will apply the rewritting rules
# to each configured DirectoryIndex file (e.g. index.php, index.html, index.pl).
DirectoryIndex dist/index.html

#<IfModule mod_rewrite.c>
#    RewriteEngine On
#
#    #Rewrite www requests to no-www by removing the "www." prefix
#    RewriteCond %{HTTP_HOST} ^www\.(.+) [NC]
#    RewriteRule ^(.*) http://%1/$1 [R=301,NE,L]
#
#    # Determine the RewriteBase automatically and set it as environment variable.
#    # If you are using Apache aliases to do mass virtual hosting or installed the
#    # project in a subdirectory, the base path will be prepended to allow proper
#    # resolution of the app.php file and to redirect to the correct URI. It will
#    # work in environments without path prefix as well, providing a safe, one-size
#    # fits all solution. But as you do not need it in this case, you can comment
#    # the following 2 lines to eliminate the overhead.
#    RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$
#    RewriteRule ^(.*) - [E=BASE:%1]
#
#    # If the requested filename exists, simply serve it.
#    # We only want to let Apache serve files and not directories.
#    RewriteCond %{REQUEST_FILENAME} -f
#    RewriteRule .? - [L]
#
#    # Rewrite all other queries to the front controller.
#    RewriteRule .? %{ENV:BASE}/dist/index.html [L]
#
#</IfModule>